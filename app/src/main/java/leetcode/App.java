/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leetcode;

import leetcode.sort.*;
import leetcode.util.Printer;

import java.util.Arrays;

public class App {
    public static void main(String[] args) {
//        BaseSolution<Integer> solution = new NumWaysSolution();
//        System.out.println(solution.performSingleTest());
        testSorts();
    }

    private static void testSorts() {
        testSingleSort(
                new SelectionSort(),
                new Integer[]{9, 11, 13, 4, 6, 5, 7, 12, 1, 10, 2, 8, 3, 16, 14}
        );
        testSingleSort(
                new BubbleSort(),
                new Integer[]{-5, 9, 11, 13, 32, 4, 1, 10, 88, 2, 8, 3, 16, 14}
        );
        testSingleSort(
                new InsertionSort(),
                new Integer[]{1, 2, 3, 4, 5, 6, 7, 8, 9}
        );
        testSingleSort(
                new MergeSort(),
                new Integer[]{101, 11, 13, 51, 7, 12, 1, 8, 10, 2, 17, 3, 16, 14}
        );
        testSingleSort(
                new BucketSort(),
                new Integer[]{1011, 23211, 124243, 511, 724332, -1124234}
        );
    }

    private static <T> void testSingleSort(ISort<T> sort, T[] originArray) {
        T[] array;

        array = Arrays.copyOf(originArray, originArray.length);
        testSingleSortInner(new LibrarySort<>(), array);

        array = Arrays.copyOf(originArray, originArray.length);
        testSingleSortInner(sort, array);
    }

    private static <T> void testSingleSortInner(ISort<T> sort, T[] originArray) {
        long beforeTime = System.currentTimeMillis();
        T[] result = sort.performSort(originArray);
        System.out.printf("TYPE=%s, TIME=%dms\n", sort.getSortType(), System.currentTimeMillis() - beforeTime);
        Printer.printArray(result);
    }
}
