/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leetcode;

import leetcode.sort.BubbleSort;
import leetcode.sort.InsertionSort;
import leetcode.sort.LibrarySort;
import leetcode.sort.SelectionSort;
import leetcode.util.Printer;

import java.util.Arrays;

public class App {
    public static void main(String[] args) {
//        BaseSolution<Integer> solution = new NumWaysSolution();
//        System.out.println(solution.performSingleTest());
        testSorts();
    }

    private static void testSorts() {
        testSingleSort(
                new SelectionSort(),
                new int[]{9, 11, 13, 4, 6, 5, 7, 12, 1, 10, 2, 8, 3, 16, 14}
        );
        testSingleSort(
                new BubbleSort(),
                new int[]{-5, 9, 11, 13, 32, 4, 1, 10, 88, 2, 8, 3, 16, 14}
        );
        testSingleSort(
                new InsertionSort(),
                new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}
        );
    }

    private static void testSingleSort(ISort sort, int[] originArray) {
        int[] array;

        array = Arrays.copyOf(originArray, originArray.length);
        testSingleSortInner(new LibrarySort(), array);

        array = Arrays.copyOf(originArray, originArray.length);
        testSingleSortInner(sort, array);
    }

    private static void testSingleSortInner(ISort sort, int[] originArray) {
        long beforeTime = System.currentTimeMillis();
        int[] result = sort.performSort(originArray);
        System.out.printf("TYPE=%s, TIME=%dms\n", sort.getSortType(), System.currentTimeMillis() - beforeTime);
        Printer.printIntArray(result);
    }
}
